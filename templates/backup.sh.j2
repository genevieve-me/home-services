#!/usr/bin/env bash
set -euo pipefail

echo "Checking restic repository integrity..."
restic check --repo "sftp:de3946@de3946.rsync.net:restic"
echo "Check complete."

DUMP_DIR="/data/dumps"
mkdir -p "${DUMP_DIR}"

echo "Dumping databases..."
podman exec miniflux-pg pg_dumpall -U miniflux > "${DUMP_DIR}/miniflux-db-backup.sql"
podman exec paperless_ngx_db pg_dumpall -U paperless > "${DUMP_DIR}/paperless-db-backup.sql"
podman exec koito-psql pg_dumpall -U postgres > "${DUMP_DIR}/koito-db-backup.sql"
# immich/nextcloud have automatic database dumps to their dirs, eg in /data/photos/backups
echo "Database dumps complete."

echo "Exporting container data volumes..."
podman volume export koito-data > "${DUMP_DIR}/koito-volume.tar"
echo "Koito volume export complete."
podman volume export thelounge-data > "${DUMP_DIR}/thelounge-volume.tar"
echo "thelounge volume export complete."
podman volume export nextcloud_aio_mastercontainer > "${DUMP_DIR}/nextcloud_aio_mastercontainer-volume.tar"
echo "Nextcloud volume export complete."
# see also https://docs.podman.io/en/v5.2.2/markdown/podman-cp.1.html#alternatives

# also mount /data/backup/paperless to /opt/paperless/backup
# and have the weekly run of document_exporter target that dir

echo "Running restic backup..."
restic backup \
    --repo "sftp:de3946@de3946.rsync.net:restic" \
    --verbose \
    /data/photos \
    /data/Music \
    /data/backups \
    /data/Sync \
    /data/Nextcloud \
    # manual backups?
    # all the backup script does is backup the volumes https://github.com/nextcloud/all-in-one/blob/main/Containers/borgbackup/backupscript.sh
    # database is handled by the database dumping to a volume nextcloud_aio_database_dump on startup
    # https://github.com/nextcloud/all-in-one/blob/a8b4d1f0c9610f334e3427f6dd9b889224236cd9/Containers/postgresql/start.sh#L6
    /data/nextcloud-backups \
    /data/paperless \
    /data/beets.db \
    "${DUMP_DIR}"

echo "Backup complete."

# Clean up old dumps
find "${DUMP_DIR}" -type f -mtime +7 -delete

# Send success notification
/usr/bin/curl -H "Authorization: Bearer {{ ntfy_backup_token }}" \
  -H "Title: Backup Successful" \
  -d "Home backup completed successfully" \
  https://{{ podman_services.ntfy.caddy.subdomain }}.{{ base_domain }}/{{ ntfy_backup_topic }}
