- name: Deploy Rootless Quadlet Pods
  hosts: "home"
  become: false
  pre_tasks:
    - name: System level requirements
      become: true
      block:
        - name: Install podman
          ansible.builtin.package:
            name: "podman"
            state: "present"
        - name: "Ensure user exists: {{ ansible_user }}"
          ansible.builtin.user:
            name: "{{ ansible_user }}"
            home: "/home/{{ ansible_user }}"
            append: true
            # for immich machine learning
            groups: ["render"]
            password: "{{ user_password_hash | default('dummy') }}"
        - name: Lock root user
          ansible.builtin.user:
            name: "root"
            password_lock: true
    - name: Enable podman auto update service
      ansible.builtin.systemd_service:
        scope: "user"
        daemon_reload: true
        name: "podman-auto-update.timer"
        enabled: true
        state: "started"
    - name: Copy Caddyfile
      ansible.builtin.template:
        src: "{{ project_dir }}/templates/Caddyfile.j2"
        dest: "/home/{{ ansible_user }}/Caddyfile"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"
    - name: "Ensure ntfy config dir exists"
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/ntfy-config"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0755"
    - name: Copy ntfy config
      ansible.builtin.template:
        src: "{{ project_dir }}/templates/pods/ntfy/server.yml.j2"
        dest: "/home/{{ ansible_user }}/ntfy-config/server.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"
    - name: Create mounted data directories
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        state: directory
        mode: '0755'
      loop:
        - /data/Music
        - /data/navidrome_data
        - /data/navidrome_backup
        - /data/paperless
        - /data/photos
        - /data/Sync
  roles:
    - role: "linux-system-roles.podman"
  vars:
    podman_run_as_user: "{{ ansible_user }}"
    podman_activate_systemd_unit: true
    # note that these secrets are stored unencrypted on the host by default
    # Dynamically build list of secrets for enabled services
    podman_secrets: "{{ podman_services
      | dict2items
      | rejectattr('value.secrets', 'undefined')
      | selectattr('value.enabled', 'equalto', true)
      | map(attribute='value.secrets')
      | flatten
      }}"
    # in dependency order, so volumes/pods must be created first
    podman_quadlet_specs: "{{ [
        {'file_src': project_dir ~ '/templates/pods/syncthing.container'},
        {'file_src': project_dir ~ '/templates/pods/services.network'},
      ] +
      ( podman_services
      | dict2items
      | selectattr('value.enabled')
      | map(attribute='value.quadlet_specs')
      | flatten )
      }}"
