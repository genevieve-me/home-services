- name: Deploy Rootless Quadlet Pods
  hosts: "home"
  become: false
  pre_tasks:
    - name: System level requirements
      become: true
      block:
        - name: Install podman
          ansible.builtin.package:
            name: "podman"
            state: "present"
        - name: "Ensure user exists: {{ ansible_user }}"
          ansible.builtin.user:
            name: "{{ ansible_user }}"
            home: "/home/{{ ansible_user }}"
            append: true
            # for immich machine learning
            groups: ["render"]
            password: "{{ user_password_hash | default('dummy') }}"
        - name: Lock root user
          ansible.builtin.user:
            name: "root"
            password_lock: true
    - name: Enable podman auto update service
      ansible.builtin.systemd_service:
        scope: "user"
        daemon_reload: true
        name: "podman-auto-update.timer"
        enabled: true
        state: "started"
    - name: Copy Caddyfile
      ansible.builtin.copy:
        src: "{{ project_dir }}/templates/Caddyfile"
        dest: "/home/{{ ansible_user }}/Caddyfile"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"
    - name: "Ensure ntfy config dir exists"
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/ntfy-config"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0755"
    - name: Copy ntfy config
      ansible.builtin.template:
        src: "{{ project_dir }}/templates/pods/ntfy/server.yml.j2"
        dest: "/home/{{ ansible_user }}/ntfy-config/server.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"
  roles:
    - role: "linux-system-roles.podman"
  vars:
    podman_run_as_user: "{{ ansible_user }}"
    podman_activate_systemd_unit: true
    # note that these are stored unencrypted on the host by default
    podman_secrets:
      - name: immich-db-password
        data: "{{ immich_db_password | default('dummy') }}"
        labels:
          app: immich
      - name: paperless-db-password
        data: "{{ paperless_db_password | default('dummy') }}"
        labels:
          app: paperless
      - name: koito-db-password
        data: "{{ koito_db_password | default('dummy') }}"
        labels:
          app: koito
      - name: koito-db-url
        data: postgres://postgres:{{ koito_db_password | default('dummy') }}@localhost:5432/koitodb
        labels:
          app: koito
      - name: miniflux-db-password
        data: "{{ miniflux_db_password | default('dummy') }}"
        labels:
          app: miniflux
      - name: miniflux-database-url
        data: "postgres://miniflux:{{ miniflux_db_password | default('dummy') }}@localhost/miniflux?sslmode=disable"
        labels:
          app: miniflux
      - name: ddns-config
        data: |
          {
            "settings": [
              {
                "provider": "he",
                "domain": "srv.{{ base_domain }}",
                "password": " {{ ddns_password | default('dummy') }}"
              }
            ]
          }
    podman_kube_specs:
      - kube_file_src: "{{ project_dir }}/templates/pods/ntfy/ntfy.yaml"
        state: started
        network: "home-services"
    podman_quadlet_specs:
      # in dependency order, so volumes/pods must be created first
      - file_src: "{{ project_dir }}/templates/pods/ddns.container"
      - file_src: "{{ project_dir }}/templates/pods/syncthing.container"
      - file_src: "{{ project_dir }}/templates/pods/services.network"
      - file_src: "{{ project_dir }}/templates/pods/caddy/caddy-config.volume"
      - file_src: "{{ project_dir }}/templates/pods/caddy/caddy-data.volume"
      - template_src: "{{ project_dir }}/templates/pods/caddy/caddy.container.j2"
      - file_src: "{{ project_dir }}/templates/pods/ntfy/ntfy.yaml"
      - file_src: "{{ project_dir }}/templates/pods/ntfy/ntfy.kube"
      - file_src: "{{ project_dir }}/templates/pods/nextcloud/nextcloud_aio_mastercontainer.volume"
      - file_src: "{{ project_dir }}/templates/pods/nextcloud/nextcloud-aio.container"
      - file_src: "{{ project_dir }}/templates/pods/immich/immich-db.volume"
      - file_src: "{{ project_dir }}/templates/pods/immich/immich-model-cache.volume"
      - file_src: "{{ project_dir }}/templates/pods/immich/immich.pod"
      - file_src: "{{ project_dir }}/templates/pods/immich/immich-database.container"
      - file_src: "{{ project_dir }}/templates/pods/immich/immich-redis.container"
      - file_src: "{{ project_dir }}/templates/pods/immich/immich-machine-learning.container"
      - file_src: "{{ project_dir }}/templates/pods/immich/immich-server.container"
      - file_src: "{{ project_dir }}/templates/pods/miniflux/miniflux-db.volume"
      - file_src: "{{ project_dir }}/templates/pods/miniflux/miniflux.pod"
      - file_src: "{{ project_dir }}/templates/pods/miniflux/miniflux-pg.container"
      - template_src: "{{ project_dir }}/templates/pods/miniflux/miniflux.container.j2"
      - file_src: "{{ project_dir }}/templates/pods/navidrome/navidrome.pod"
      - file_src: "{{ project_dir }}/templates/pods/navidrome/navidrome.container"
      - file_src: "{{ project_dir }}/templates/pods/thelounge/thelounge.volume"
      - file_src: "{{ project_dir }}/templates/pods/thelounge/thelounge.container"
      - file_src: "{{ project_dir }}/templates/pods/koito/koito.volume"
      - file_src: "{{ project_dir }}/templates/pods/koito/koito-db.volume"
      - file_src: "{{ project_dir }}/templates/pods/koito/koito.pod"
      - file_src: "{{ project_dir }}/templates/pods/koito/koito-db.container"
      - template_src: "{{ project_dir }}/templates/pods/koito/koito.container.j2"
